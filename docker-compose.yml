version: '3.8'

services:
  # =============================================================================
  # Webscout API - Production Configuration with Traefik
  # =============================================================================
  webscout-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - WEBSCOUT_VERSION=latest
        - BUILD_DATE=${BUILD_DATE}
        - VCS_REF=${VCS_REF}
        - VERSION=${VERSION}
    image: webscout-api:${VERSION:-latest}
    container_name: webscout-api-prod
    restart: always

    environment:
      - WEBSCOUT_HOST=0.0.0.0
      - WEBSCOUT_PORT=8000
      - WEBSCOUT_WORKERS=${WEBSCOUT_WORKERS:-4}
      - WEBSCOUT_LOG_LEVEL=${WEBSCOUT_LOG_LEVEL:-warning}
      - WEBSCOUT_DEBUG=false
      - WEBSCOUT_API_TITLE=${WEBSCOUT_API_TITLE}
      - WEBSCOUT_API_DESCRIPTION=${WEBSCOUT_API_DESCRIPTION}
      - WEBSCOUT_API_VERSION=${WEBSCOUT_API_VERSION}
      - WEBSCOUT_DATA_DIR=/app/data
      - HEALTHCHECK_TIMEOUT=${HEALTHCHECK_TIMEOUT:-10}

    # No exponemos puertos directamente, Traefik se encarga
    expose:
      - "8000"

    volumes:
      - webscout-logs:/app/logs
      - webscout-data:/app/data
      - /etc/localtime:/etc/localtime:ro

    command: [
      "gunicorn",
      "--bind", "0.0.0.0:8000",
      "--workers", "4",
      "--worker-class", "uvicorn.workers.UvicornWorker",
      "--log-level", "warning",
      "--access-logfile", "/app/logs/access.log",
      "--error-logfile", "/app/logs/error.log",
      "--preload",
      "--timeout", "120",
      "--graceful-timeout", "30",
      "--keep-alive", "5",
      "webscout.server.server:create_app"
    ]

    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request; urllib.request.urlopen('http://localhost:8000/monitor/health')\" || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT:-2G}
          cpus: '${CPU_LIMIT:-2.0}'
        reservations:
          memory: ${MEMORY_RESERVATION:-1G}
          cpus: '${CPU_RESERVATION:-1.0}'

    security_opt:
      - no-new-privileges:true
    
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
        compress: "true"

    # =============================================================================
    # Traefik Labels Configuration
    # =============================================================================
    labels:
      # Enable Traefik for this service
      - "traefik.enable=true"
      
      # Router configuration
      - "traefik.http.routers.webscout-api.rule=Host(`${DOMAIN_NAME:-api.localhost}`)"
      - "traefik.http.routers.webscout-api.entrypoints=websecure"
      - "traefik.http.routers.webscout-api.tls=true"
      - "traefik.http.routers.webscout-api.tls.certresolver=${CERT_RESOLVER:-letsencrypt}"
      
      # Service configuration
      - "traefik.http.services.webscout-api.loadbalancer.server.port=8000"
      - "traefik.http.services.webscout-api.loadbalancer.server.scheme=http"
      
      # Health check
      - "traefik.http.services.webscout-api.loadbalancer.healthcheck.path=/monitor/health"
      - "traefik.http.services.webscout-api.loadbalancer.healthcheck.interval=30s"
      - "traefik.http.services.webscout-api.loadbalancer.healthcheck.timeout=10s"
      
      # Middleware chain
      - "traefik.http.routers.webscout-api.middlewares=webscout-chain"
      
      # Security headers middleware
      - "traefik.http.middlewares.webscout-headers.headers.framedeny=true"
      - "traefik.http.middlewares.webscout-headers.headers.sslredirect=true"
      - "traefik.http.middlewares.webscout-headers.headers.stsincludesubdomains=true"
      - "traefik.http.middlewares.webscout-headers.headers.stspreload=true"
      - "traefik.http.middlewares.webscout-headers.headers.stsseconds=31536000"
      - "traefik.http.middlewares.webscout-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.webscout-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.webscout-headers.headers.referrerPolicy=no-referrer-when-downgrade"
      
      # Rate limiting middleware (opcional)
      - "traefik.http.middlewares.webscout-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.webscout-ratelimit.ratelimit.burst=50"
      - "traefik.http.middlewares.webscout-ratelimit.ratelimit.period=1s"
      
      # Compression middleware
      - "traefik.http.middlewares.webscout-compress.compress=true"
      
      # Middleware chain definition
      - "traefik.http.middlewares.webscout-chain.chain.middlewares=webscout-ratelimit,webscout-headers,webscout-compress"
      
      # HTTP to HTTPS redirect (router separado)
      - "traefik.http.routers.webscout-api-http.rule=Host(`${DOMAIN_NAME:-api.localhost}`)"
      - "traefik.http.routers.webscout-api-http.entrypoints=web"
      - "traefik.http.routers.webscout-api-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"

    networks:
      - traefik-network

volumes:
  webscout-logs:
    driver: local
  webscout-data:
    driver: local

networks:
  traefik-network:
    external: true
